on:
  workflow_call:
    inputs:
      package-name:
        type: string
        description: The package name to analyze
        required: true
      artifact-name:
        type: string
        description: The name of the artifact.
        default: NuGet
      artifacts:
        type: string
        description: The path to the artifacts.
        default: "Artifacts/*.nupkg,Artifacts/*.snupkg"
      artifactErrorsFailBuild:
        type: boolean
        description: Whether to fail the build if there are errors in the artifact.
        default: true
      generateReleaseNotes:
        type: boolean
        description: Whether to generate release notes or not.
        default: true
      zipPath:
        type: string
        description: The path to the files to zip.
        default: ''

jobs:
  create-release:
    runs-on: ubuntu-latest
    env:
      DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: true
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
    permissions:
      contents: write
    outputs:
      version-name: ${{ steps.process-version.outputs.version-name }}
      release-display-name: ${{ steps.process-version.outputs.release-display-name }}
      is-preview: ${{ steps.process-version.outputs.is-preview }}

    steps:
    - uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.artifact-name }}
        path: Artifacts/

    - name: Zip files
      if: ${{ inputs.zipPath != '' }}
      run: |
        IFS=';' read -ra PATHS <<< "${{ inputs.zipPath }}"
        for path in "${PATHS[@]}"; do
          path=$(echo "$path" | sed 's/^\.\///')
          path=$(echo "$path" | sed 's/\/$//')
          path=$(echo "$path" | sed 's/\//\\/g')
          if [ ! -e "$path" ]; then
            echo "Path $path does not exist"
            continue
          fi
          echo "Zipping path $path"
          cd "$(dirname "$path")"
          zip -r "$(basename "$path").zip" "$(basename "$path")"
          cd -
        done

    - name: Process Package Version
      shell: bash
      id: process-version
      working-directory: Artifacts/
      run: |
        echo "Downloading package version script..."
        curl -sS -o process-version.pl https://raw.githubusercontent.com/avantipoint/workflow-templates/master/build/process-version.pl
        echo "Finished downloading package version script."
        echo "Processing package version..."
        perl process-version.pl ${{ inputs.package-name }}

    - uses: ncipollo/release-action@main
      name: Create Release
      with:
        artifacts: ${{ inputs.artifacts }}
        artifactErrorsFailBuild: ${{ inputs.artifactErrorsFailBuild }}
        draft: true
        generateReleaseNotes: ${{ inputs.generateReleaseNotes }}
        name: ${{ steps.process-version.outputs.release-display-name }}
        prerelease: ${{ steps.process-version.outputs.is-preview }}
        tag: ${{ steps.process-version.outputs.version-name }}